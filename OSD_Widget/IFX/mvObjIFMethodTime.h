/*
 * This file was generated by qdbusxml2cpp version 0.8
 * Command line was: qdbusxml2cpp /home/beacon/Qt/OSD_Widget/IFX/mvObjIFMethodTime.xml -p /home/beacon/Qt/OSD_Widget/IFX/mvObjIFMethodTime
 *
 * qdbusxml2cpp is Copyright (C) 2019 The Qt Company Ltd.
 *
 * This is an auto-generated file.
 * Do not edit! All changes made to it will be lost.
 */

#ifndef MVOBJIFMETHODTIME_H
#define MVOBJIFMETHODTIME_H

#include <QtCore/QObject>
#include <QtCore/QByteArray>
#include <QtCore/QList>
#include <QtCore/QMap>
#include <QtCore/QString>
#include <QtCore/QStringList>
#include <QtCore/QVariant>
#include <QtDBus/QtDBus>
#include "mvobj.h"
/*
 * Proxy class for interface mv.mvapp.time
 */
class MvMvappTimeInterface: public QDBusAbstractInterface
{
    Q_OBJECT
public:
    static inline const char *staticInterfaceName()
    { return "mv.mvapp.time"; }

public:
    MvMvappTimeInterface(const QString &service, const QString &path, const QDBusConnection &connection, QObject *parent = nullptr);

    ~MvMvappTimeInterface();

public Q_SLOTS: // METHODS
    inline QDBusPendingReply<stTIME_INFO> GetCalibTime()
    {
        QList<QVariant> argumentList;
        return asyncCallWithArgumentList(QStringLiteral("GetCalibTime"), argumentList);
    }

    inline QDBusPendingReply<int> GetWorkTime()
    {
        QList<QVariant> argumentList;
        return asyncCallWithArgumentList(QStringLiteral("GetWorkTime"), argumentList);
    }

    inline QDBusPendingReply<> SetCalibTime(stTIME_INFO time)
    {
        QList<QVariant> argumentList;
        argumentList << QVariant::fromValue(time);
        return asyncCallWithArgumentList(QStringLiteral("SetCalibTime"), argumentList);
    }

    inline QDBusPendingReply<> SetWorkTime(int hours)
    {
        QList<QVariant> argumentList;
        argumentList << QVariant::fromValue(hours);
        return asyncCallWithArgumentList(QStringLiteral("SetWorkTime"), argumentList);
    }

Q_SIGNALS: // SIGNALS
    void SigSetCalibTime(stTIME_INFO time);
    void SigSetWorkTime(int hours);
};

namespace mv {
  namespace mvapp {
    typedef ::MvMvappTimeInterface time;
  }
}
#endif
